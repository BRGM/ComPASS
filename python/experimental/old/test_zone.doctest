

>>> import numpy as np
>>> from index_zoning import ZoneManager


Initialisation
==============

>>> manager = ZoneManager(10, True)


Creation de zones
=================

>>> iz1 = manager.build_from_indices(range(5, 10), '>5')
>>> iz2 = manager.build_from_indices(range(0, 10, 2), 'pair')
>>> all2 = manager.build_from_indices(range(20), check_consistency=False)  # error if check

>>> manager.build_from_indices([]).content().size == 0
True
>>> all2 == manager['whole']
True

>>> set(manager['whole'].content()) == set(range(10))
True
>>> np.allclose(iz1.content(), range(5, 10))
True
>>> np.allclose(iz2.content(), range(0, 10, 2))
True


La même chose avec des masques

>>> mz1 = manager.build_from_mask([0, 0, 0, 0, 0, 1, 1, 1, 1, 1])
>>> mz2 = manager.build_from_mask([1, 0, 1, 0, 1, 0, 1, 0, 1, 0])

>>> manager.build_from_mask([0]*10).content().size == 0
True

>>> iz1 == mz1
True
>>> iz2 == mz2
True

>>> set(manager['whole'].content()) == set(range(10))
True
>>> np.allclose(mz1.content(), range(5, 10))
True
>>> np.allclose(mz2.content(), range(0, 10, 2))
True


Opérations ensemblistes
=======================

Création de nouveaux ensembles
------------------------------

intersection
>>> iz1 & iz2 == manager.build_from_indices([6, 8])
True

union
>>> iz1 | iz2 == manager.build_from_indices([0, 2, 4, 5, 6, 7, 8, 9])
True

différence
>>> iz1 - iz2 == manager.build_from_indices([5, 7, 9])
True

différence symmétrique
>>> iz1 ^ iz2 == manager.build_from_indices([0, 2, 4, 5, 7, 9])
True

création du complémentaire
>>> iz1.complement() == manager.build_from_indices([0, 1, 2, 3, 4])
True
>>> iz2.complement() == manager.build_from_indices([1, 3, 5, 7, 9])
True

Test sur les ensembles
----------------------

>>> iz1 == iz2
False
>>> iz1 != iz2
True
>>> manager['whole'] == all2
True
>>> manager['whole'] != all2
False

>>> iz1 <= all2
True
>>> iz1 >= all2
False
>>> iz1 > all2
False
>>> iz1 < all2
True
>>> iz1 > iz2
False
>>> iz1 < iz2
False
>>> iz1 >= iz2
False
>>> iz1 <= iz2
False

>>> iz1.isdisjoint(iz2)
False
>>> iz2.isdisjoint(manager.build_from_indices([1, 5, 9]))
True
